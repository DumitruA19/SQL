/*1. Select all columns from the FactResellerSales table.*/
select * from FactResellerSales

/*2. Display the first 10 rows from DimCustomer.*/
select top 10 * from DimCustomer 

/*3. Find all transactions from the year 2013 in FactInternetSales.*/
select *from FactInternetSales
where YEAR(OrderDate) =2013;

/*4. Show all products from DimProduct with the color 'Red'.*/
select *from DimProduct
where color like 'red';

/*5. List all customers from DimCustomer ordered alphabetically by name.*/
select * from DimCustomer
order by LastName,FirstName;

/*6. Find all orders placed on January 1, 2013.*/
select *from FactInternetSales
where OrderDate = '2013-01-01';

/*7. Select all rows from FactInternetSales where SalesAmount is greater than 1000.*/
select *from FactInternetSales
where SalesAmount >1000;

/*8. Display distinct product categories from DimProductCategory.*/
select distinct *from DimProductCategory;

/*9. Identify all employees in DimEmployee with the title 'Sales Representative'.*/
select *from DimEmployee
where title like 'Sales Representative';

/*10. Select all reseller orders with a discount greater than 5% from FactResellerSales.*/
select *from FactResellerSales
WHERE DiscountAmount > 0.05;

/*11. Find orders placed by customers from a specific country.*/
SELECT f.SalesOrderNumber, f.CustomerKey, c.FirstName, c.LastName, c.GeographyKey, g.CountryRegionCode, f.OrderDate, f.SalesAmount
FROM FactInternetSales f
JOIN DimCustomer c ON f.CustomerKey = c.CustomerKey
JOIN DimGeography g ON c.GeographyKey = g.GeographyKey
WHERE g.CountryRegionCode = 'FR';

/*12. Identify products with a unit price greater than $500.*/
select *from FactInternetSales
where UnitPrice > 500;

/*13. List all reseller store locations.*/
select r.resellerkey, r.ResellerName,g.City, g.StateProvinceName, g.CountryRegioncode from DimReseller r
join DimGeography g ON r.GeographyKey = g.GeographyKey
order by g.CountryRegionCode, g.StateProvinceName, g.City;

/*14. Find resellers who did not place any orders in 2013.*/
SELECT r.ResellerKey, r.ResellerName, r.BusinessType
FROM DimReseller r
LEFT JOIN FactResellerSales f ON r.ResellerKey = f.ResellerKey 
    AND YEAR(f.OrderDate) = 2013
WHERE f.ResellerKey IS NULL;

/*15. Select products that had no sales in 2014.*/
select p.ProductKey,p.EnglishProductName from DimProduct p
left join FactInternetSales f ON p.ProductKey = f.ProductKey
and YEAR(f.OrderDate) = 2014
Where f.ProductKey IS NULL;

/*16. Display all customers who purchased at least one bicycle.*/
select distinct c.CustomerKey, c.FirstName,c.LastName from DimCustomer c
join FactInternetSales f ON c.CustomerKey = f.CustomerKey
join DimProduct p ON p.ProductKey = f.ProductKey
where p.ProductSubcategoryKey IN (
	select ProductSubcategoryKey from DimProductSubcategory 
	where EnglishProductSubcategoryName like '%bikes');

/*17. List products that are in stock but have had no sales in the last 6 months.*/
select p.ProductKey, p.EnglishProductName, p.SafetyStockLevel, p.ProductLine from DimProduct p
left join FactInternetSales f ON p.ProductKey = f.ProductKey
	and f.OrderDate >= DATEADD(MONTH, -6,GETDATE())
left join FactResellerSales r ON p.ProductKey =r.ProductKey
	and r.OrderDate >= DATEADD(MONTH, -6,GETDATE())
where (f.ProductKey IS NULL AND r.ProductKey is null)
and p.SafetyStockLevel >0;

/*18. Show details of orders placed by resellers where a discount was applied.*/
select p.ProductKey, p.EnglishProductName , r.DiscountAmount,d.ResellerName from DimProduct p
join FactResellerSales r ON p.ProductKey = r.ProductKey
join DimReseller d on r.ResellerKey = d.ResellerKey
where r.DiscountAmount > 0;

/*19. Find products with the longest average delivery time.*/
select p.ProductKey, p.EnglishProductName, 
AVG(DATEDIFF(DAY, f.OrderDate,f.ShipDate)) as AvgDeliveryTime,
Count(f.SalesOrderNumber) as TotalOrder 
from FactInternetSales f
join DimProduct p on f.ProductKey = p.ProductKey
group by p.ProductKey, p.EnglishProductName
order by AvgDeliveryTime

/*20. Count the total number of customers in DimCustomer.*/
select count(*) from DimCustomer

/*21. Calculate the total sales amount from FactInternetSales.*/
select SUM(SalesAmount)as SumaTotala from FactInternetSales

/*22. Display total revenue generated by each sales channel in FactInternetSales.*/
select 'Internet Sales' as SalesChannel, sum(SalesAmount) as 'Total Revenue ' from FactInternetSales
union all 
select 'Reseller Sales' as SalesChannel, sum(SalesAmount) as 'Total Revenue ' from FactResellerSales

/*23. Find the average selling price per product.*/
select p.ProductKey, p.EnglishProductName,avg(f.UnitPrice) as AverageSellingPrice from FactInternetSales f
join DimProduct p on f.ProductKey = p.ProductKey
group by p.ProductKey, p.EnglishProductName 
order by AverageSellingPrice DESC

/*24. Identify the product with the highest total sales value.*/
select p.ProductKey, p.EnglishProductName,sum(f.SalesAmount) as 'Total Revenue' from FactInternetSales f
join DimProduct p on f.ProductKey = p.ProductKey
group by p.ProductKey,p.EnglishProductName
order by 'Total Revenue' DESC

/*25. Count the total number of transactions per year.*/
select d.CalendarYear, count(distinct f.SalesOrderNumber) as TotalTransactions 
from FactInternetSales f
join DimDate d on f.OrderDateKey = d.DateKey
group by d.CalendarYear
order by d.CalendarYear

/*26. Show the top 5 best-selling products.*/
select TOP 5 p.ProductKey, p.EnglishProductName,sum(f.SalesAmount) as 'Total Revenue' from FactInternetSales f
join DimProduct p on f.ProductKey = p.ProductKey
group by p.ProductKey,p.EnglishProductName
order by 'Total Revenue' DESC

/*27. Find the reseller with the highest total sales.*/
SELECT TOP 5 
    r.ResellerKey, 
    r.ResellerName, 
    SUM(f.SalesAmount) AS TotalRevenue
FROM FactResellerSales f
JOIN DimReseller r ON r.ResellerKey = f.ResellerKey
GROUP BY r.ResellerKey, r.ResellerName
ORDER BY TotalRevenue DESC;

/*28. Calculate the average discount given per customer.*/
select c.CustomerKey,c.FirstName, c.LastName, avg(f.DiscountAmount) as AverageDiscount from DimCustomer c
join FactInternetSales f on c.CustomerKey = f.CustomerKey 
where f.DiscountAmount > 0
group by c.CustomerKey,c.FirstName,c.LastName
order by AverageDiscount

/*29. Find total revenue per product category.*/
select p.ProductKey,p.EnglishProductName , sum(f.SalesAmount) as TotalRevenue from DimProduct p
join FactInternetSales f on p.ProductKey = f.productkey
group by p.ProductKey, p.EnglishProductName
order by TotalRevenue DESC

/*30. Count total orders per month in 2013.*/
select d.CalendarYear,d.MonthNumberOfYear,d.EnglishMonthName,p.EnglishProductName,
count(f.SalesAmount) TotalOrders from DimProduct p
join FactInternetSales f on p.ProductKey = f.ProductKey
join DimDate d on f.OrderDateKey = d.DateKey
where d.CalendarYear =2013
group by p.EnglishProductName, d.CalendarYear, d.MonthNumberOfYear, d.EnglishMonthName

/*31. Identify the most profitable month of 2014.*/
select TOP 1 d.CalendarYear, d.EnglishMonthName, SUM(f.SalesAmount) as InternetRevenue from FactInternetSales f
join DimDate d on f.OrderDateKey = d.DateKey
where d.CalendarYear =2014
group by d.CalendarYear, d.EnglishMonthName
order by InternetRevenue 

/*32. Display revenue generated by each region.*/
select t.SalesTerritoryKey,t.SalesTerritoryGroup, t.SalesTerritoryGroup, sum(f.SalesAmount) as TotalPerRegion from FactInternetSales f
join DimSalesTerritory t on t.SalesTerritoryKey = f.SalesTerritoryKey
group by  t.SalesTerritoryKey,t.SalesTerritoryGroup, t.SalesTerritoryGroup
order by TotalPerRegion DESC

/*33. Identify the most active customer from 2013.*/
select TOP 1 c.CustomerKey,c.FirstName, c.LastName, count(distinct f.SalesOrderNumber) as TotalOrders from FactInternetSales f
join DimCustomer c on f.CustomerKey = c.CustomerKey 
join DimDate d on f.OrderDateKey = d.Datekey
where d.CalendarYear =2013
group by c.CustomerKey,c.FirstName, c.LastName
order by TotalOrders DESC

/*34. Calculate the total amount spent by all customers in a specific country.*/
select 
	sum(f.SalesAmount) as TotalRevenue, 
	d.SalesTerritoryKey,
	d.SalesTerritoryCountry 
	from FactInternetSales f
join DimSalesTerritory d on f.SalesTerritoryKey = d.SalesTerritoryKey
where d.SalesTerritoryCountry = 'Germany'
group by d.SalesTerritoryKey,d.SalesTerritoryCountry
order by TotalRevenue DESC

/*35. Find the customer who bought the same product the most times.*/
select top 1
	f.CustomerKey,
	c.FirstName,
	c.LastName,
	f.ProductKey,
	p.EnglishProductName, 
	count(*) as PurchaseCount
FROM FactInternetSales f
JOIN DimCustomer c ON f.CustomerKey = c.CustomerKey
JOIN DimProduct p ON f.ProductKey = p.ProductKey
GROUP BY f.CustomerKey, c.FirstName, c.LastName, f.ProductKey, p.EnglishProductName
ORDER BY PurchaseCount DESC;

/*36. List products that were never returned.*/
 select p.ProductKey, p.EnglishProductName from DimProduct p
where p.ProductKey not in(
	select distinct f.ProductKey
	from FactInternetSalesReason r
	join FactInternetSales f on r.SalesOrderNumber = f.SalesOrderNumber);

/*37. Compare total revenue from resellers vs online sales.*/
WITH SalesSummary AS (
    SELECT 
        'Reseller Sales' AS SalesChannel, 
        SUM(SalesAmount) AS TotalRevenue
    FROM FactResellerSales

    UNION ALL

    SELECT 
        'Internet Sales' AS SalesChannel, 
        SUM(SalesAmount) AS TotalRevenue
    FROM FactInternetSales
),
TotalSales AS (
    SELECT SUM(TotalRevenue) AS GrandTotal FROM SalesSummary
)
SELECT 
    s.SalesChannel,
    s.TotalRevenue,
    (s.TotalRevenue * 100.0 / t.GrandTotal) AS SalesPercentage
FROM SalesSummary s, TotalSales t
ORDER BY TotalRevenue DESC;
